import win32com.client

def list_scheduled_tasks():
    """
    üîç **–û–ø–∏—Å–∞–Ω–∏–µ:**
    –í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–¥–∞—á, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∑–∞–¥–∞—á Windows.

    üõ† **–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç:**
    - –ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫—É –∑–∞–¥–∞—á —á–µ—Ä–µ–∑ COM-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.
    - –ü–æ–ª—É—á–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –∑–∞–¥–∞—á.
    - –ü–µ—Ä–µ—á–∏—Å–ª—è–µ—Ç –≤—Å–µ –∑–∞–¥–∞—á–∏ –≤ —ç—Ç–æ–π –ø–∞–ø–∫–µ –∏ –≤—ã–≤–æ–¥–∏—Ç –∏—Ö –∏–º–µ–Ω–∞.

    üìã **–ß—Ç–æ –¥–µ–ª–∞–µ—Ç:**
    - –í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –≤ —Ñ–æ—Ä–º–∞—Ç–µ: `Task Name: <–∏–º—è_–∑–∞–¥–∞—á–∏>`.

    ‚ö† **–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:**
    - –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å –∑–∞–¥–∞—á–∞–º–∏ –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ (–ø–æ–¥–ø–∞–ø–∫–∏ –Ω–µ –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é—Ç—Å—è).
    - –¢—Ä–µ–±—É–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ `pywin32`.

    üìå **–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:**
    >>> list_scheduled_tasks()
    Task Name: MyBackupTask
    Task Name: SystemMaintenance
    Task Name: UpdateChecker

    üìö **–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:**
    - Windows OS —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∑–∞–¥–∞—á.
    - –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –º–æ–¥—É–ª—å `pywin32`.
    """

    # üåü –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫—É –∑–∞–¥–∞—á
    scheduler = win32com.client.Dispatch('Schedule.Service')
    scheduler.Connect()

    # üìÇ –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –∑–∞–¥–∞—á
    root_folder = scheduler.GetFolder('\\')

    # üîÑ –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –∑–∞–¥–∞—á–∏ –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ
    tasks = root_folder.GetTasks(0)
    for task in tasks:
        # üìå –í—ã–≤–æ–¥–∏–º –∏–º—è –∫–∞–∂–¥–æ–π –∑–∞–¥–∞—á–∏
        print(f"Task Name: {task.Name}")



def list_all_scheduled_tasks():
    """
    üîç **–û–ø–∏—Å–∞–Ω–∏–µ:**
    –í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–¥–∞—á, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≤ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ –∑–∞–¥–∞—á Windows, –≤–∫–ª—é—á–∞—è –∑–∞–¥–∞—á–∏ –≤ –ø–æ–¥–ø–∞–ø–∫–∞—Ö.

    üõ† **–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç:**
    - –ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫—É –∑–∞–¥–∞—á —á–µ—Ä–µ–∑ COM-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.
    - –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–±—Ö–æ–¥–∏—Ç –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –∑–∞–¥–∞—á –∏ –≤—Å–µ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –ø–æ–¥–ø–∞–ø–∫–∏.
    - –í—ã–≤–æ–¥–∏—Ç –∏–º–µ–Ω–∞ –≤—Å–µ—Ö –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á, –¥–æ–±–∞–≤–ª—è—è –æ—Ç—Å—Ç—É–ø—ã –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–µ—Ä–∞—Ä—Ö–∏–∏ –ø–∞–ø–æ–∫.

    üìã **–ß—Ç–æ –¥–µ–ª–∞–µ—Ç:**
    - –í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á —Å —É—á–µ—Ç–æ–º –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
        ```
        Task Name: RootTask1
          Task Name: SubFolderTask1
          Task Name: SubFolderTask2
        ```

    ‚ö† **–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:**
    - –¢—Ä–µ–±—É–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ `pywin32`.

    üìå **–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:**
    >>> list_all_scheduled_tasks()
    Task Name: BackupTask
      Task Name: MaintenanceTask
        Task Name: UpdateChecker

    üìö **–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:**
    - Windows OS —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∑–∞–¥–∞—á.
    - –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –º–æ–¥—É–ª—å `pywin32`.
    """

    # üåü –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫—É –∑–∞–¥–∞—á
    scheduler = win32com.client.Dispatch('Schedule.Service')
    scheduler.Connect()

    # üìÇ –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –∑–∞–¥–∞—á
    root_folder = scheduler.GetFolder('\\')

    # üåÄ –†–µ–∫—É—Ä—Å–∏–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ö–æ–¥–∞ –ø–∞–ø–æ–∫ –∏ –∏—Ö –∑–∞–¥–∞—á
    def list_tasks_in_folder(folder, prefix=""):
        # üîÑ –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –∑–∞–¥–∞—á–∏ –≤ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–µ
        tasks = folder.GetTasks(0)
        for task in tasks:
            # üìå –í—ã–≤–æ–¥–∏–º –∏–º—è –∫–∞–∂–¥–æ–π –∑–∞–¥–∞—á–∏ —Å –æ—Ç—Å—Ç—É–ø–æ–º
            print(f"{prefix}Task Name: {task.Name}")

        # üìÇ –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –ø–æ–¥–ø–∞–ø–∫–∏
        subfolders = folder.GetFolders(0)
        for subfolder in subfolders:
            # üîÅ –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–¥–ø–∞–ø–æ–∫
            list_tasks_in_folder(subfolder, prefix=prefix + "  ")

    # üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –æ–±—Ö–æ–¥ —Å –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏
    list_tasks_in_folder(root_folder)


def duplicate_task(old_name, new_name):
    """
    üîÑ **–û–ø–∏—Å–∞–Ω–∏–µ:**
    –î—É–±–ª–∏—Ä—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–¥–∞—á—É –≤ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ –∑–∞–¥–∞—á Windows —Å –Ω–æ–≤—ã–º –∏–º–µ–Ω–µ–º. 
    –ü—Ä–∏ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–∏ —É–±–∏—Ä–∞—é—Ç—Å—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ –∑–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —ç–ª–µ–∫—Ç—Ä–æ–ø–∏—Ç–∞–Ω–∏–∏.

    üìã **–ß—Ç–æ –¥–µ–ª–∞–µ—Ç:**
    - –ò—â–µ—Ç –∑–∞–¥–∞—á—É –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –∏–º–µ–Ω–∏ (`old_name`).
    - –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∏–º–µ–Ω–µ–º (`new_name`).
    - –ö–æ–ø–∏—Ä—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, —Ç—Ä–∏–≥–≥–µ—Ä—ã, –∏ –¥–µ–π—Å—Ç–≤–∏—è –∏–∑ —Å—Ç–∞—Ä–æ–π –∑–∞–¥–∞—á–∏.
    - –û—Ç–∫–ª—é—á–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏ –ø–∏—Ç–∞–Ω–∏—è.

    ‚ö† **–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:**
    - –ï—Å–ª–∏ –∑–∞–¥–∞—á–∞ —Å –∏–º–µ–Ω–µ–º `old_name` –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–µ–∫—Ä–∞—â–∞–µ—Ç—Å—è.
    - –¢—Ä–µ–±—É–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ `pywin32`.

    üìå **–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:**
    >>> duplicate_task("–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ", "–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ (–Ω–æ–≤–æ–µ)")

    üìö **–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:**
    - Windows OS —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∑–∞–¥–∞—á.
    - –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –º–æ–¥—É–ª—å `pywin32`.
    """

    # üåü –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫—É –∑–∞–¥–∞—á
    scheduler = win32com.client.Dispatch('Schedule.Service')
    scheduler.Connect()
    tasks_folder = scheduler.GetFolder('\\')  # üìÇ –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –∑–∞–¥–∞—á

    # üîç –ü–æ–∏—Å–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∑–∞–¥–∞—á–∏ –ø–æ –∏–º–µ–Ω–∏
    old_task = None
    tasks = tasks_folder.GetTasks(0)
    for task in tasks:
        if task.Name == old_name:
            old_task = task
            break

    if not old_task:
        # ‚ùå –ó–∞–≤–µ—Ä—à–∞–µ–º, –µ—Å–ª–∏ –∑–∞–¥–∞—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
        print(f"–ó–∞–¥–∞—á–∞ —Å –∏–º–µ–Ω–µ–º '{old_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return

    # ‚ú® –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—Ç–∞—Ä–æ–π
    new_task = scheduler.NewTask(0)
    new_task.RegistrationInfo.Description = old_task.Definition.RegistrationInfo.Description  # üìù –û–ø–∏—Å–∞–Ω–∏–µ
    new_task.Principal.UserId = old_task.Definition.Principal.UserId  # üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    new_task.Principal.LogonType = old_task.Definition.Principal.LogonType  # üîí –¢–∏–ø –≤—Ö–æ–¥–∞

    # üîÑ –ö–æ–ø–∏—Ä—É–µ–º —Ç—Ä–∏–≥–≥–µ—Ä—ã –∏–∑ —Å—Ç–∞—Ä–æ–π –∑–∞–¥–∞—á–∏
    for trigger in old_task.Definition.Triggers:
        new_trigger = new_task.Triggers.Create(trigger.Type)
        new_trigger.Id = trigger.Id  # üÜî –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç—Ä–∏–≥–≥–µ—Ä–∞
        new_trigger.Enabled = trigger.Enabled  # ‚úÖ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä–∞
        new_trigger.Subscription = trigger.Subscription  # üìú –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, EventID=2003)

    # üîÑ –ö–æ–ø–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏—è –∏–∑ —Å—Ç–∞—Ä–æ–π –∑–∞–¥–∞—á–∏
    for action in old_task.Definition.Actions:
        new_action = new_task.Actions.Create(action.Type)
        new_action.Path = action.Path  # üõ† –ü—É—Ç—å –∫ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–º—É —Ñ–∞–π–ª—É
        new_action.Arguments = action.Arguments  # ‚öô –ê—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
        new_action.WorkingDirectory = action.WorkingDirectory  # üìÇ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è

    # üîß –ö–æ–ø–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–¥–∞—á–∏
    new_task.Settings.Enabled = old_task.Definition.Settings.Enabled  # ‚úÖ –ó–∞–¥–∞—á–∞ –≤–∫–ª—é—á–µ–Ω–∞
    new_task.Settings.StartWhenAvailable = old_task.Definition.Settings.StartWhenAvailable  # üïí –ó–∞–ø—É—Å–∫, –∫–æ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–æ
    new_task.Settings.Hidden = old_task.Definition.Settings.Hidden  # üëÅ‚Äçüó® –ó–∞–¥–∞—á–∞ —Å–∫—Ä—ã—Ç–∞
    new_task.Settings.DisallowStartIfOnBatteries = False  # üîã –†–∞–∑—Ä–µ—à–∏—Ç—å –∑–∞–ø—É—Å–∫ –Ω–∞ –±–∞—Ç–∞—Ä–µ–µ
    new_task.Settings.StopIfGoingOnBatteries = False  # üîã –ù–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –Ω–∞ –±–∞—Ç–∞—Ä–µ–µ

    # üìù –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É
    tasks_folder.RegisterTaskDefinition(
        new_name,  # üìå –ù–æ–≤–æ–µ –∏–º—è –∑–∞–¥–∞—á–∏
        new_task,
        6,  # üìÇ TASK_CREATE_OR_UPDATE (—Å–æ–∑–¥–∞–Ω–∏–µ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)
        None,  # üîë –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —É–∫–∞–∑–∞–Ω
        None,  # üîë –ü–∞—Ä–æ–ª—å –Ω–µ —É–∫–∞–∑–∞–Ω
        old_task.Definition.Principal.LogonType,  # üîí –¢–∏–ø –≤—Ö–æ–¥–∞
        None  # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    )
    # ‚úÖ –°–æ–æ–±—â–∞–µ–º –æ–± —É—Å–ø–µ—à–Ω–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏
    print(f"–ó–∞–¥–∞—á–∞ '{old_name}' —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∞ –∫–∞–∫ '{new_name}'.")



def create_USB_backup_task():
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫—É –∑–∞–¥–∞—á
    scheduler = win32com.client.Dispatch('Schedule.Service')
    scheduler.Connect()
    
    # –ü–∞–ø–∫–∞ –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –∑–∞–¥–∞—á–∏
    main_folder = scheduler.GetFolder("\\")
    
    # –£–¥–∞–ª—è–µ–º –∑–∞–¥–∞—á—É, –µ—Å–ª–∏ –æ–Ω–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    task_name = "USBBackupTask"
    try:
        main_folder.DeleteTask(task_name, 0)
        print(f"–ó–∞–¥–∞—á–∞ '{task_name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–µ–Ω–∞.")
    except Exception:
        print(f"–ó–∞–¥–∞—á–∞ '{task_name}' –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞.")

    # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏
    this_task = scheduler.NewTask(0)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–¥–∞—á–∏
    this_task.RegistrationInfo.Description = "–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —Ñ–ª–µ—à–∫—É"
    this_task.Principal.LogonType = 3  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç—Ä–∏–≥–≥–µ—Ä–∞ (–ø—Ä–æ—Å—Ç–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞)
    trigger = this_task.Triggers.Create(0)  # –¢–∏–ø: –ü—Ä–∏ —Å–æ–±—ã—Ç–∏–∏
    trigger.Id = "EventTrigger1"
    trigger.Enabled = True
    trigger.Subscription = (
        "<QueryList>"
        "  <Query Id='0' Path='Microsoft-Windows-DriverFrameworks-UserMode/Operational'>"
        "    <Select Path='Microsoft-Windows-DriverFrameworks-UserMode/Operational'>"
        "      *[System[(EventID=2003)]]"
        "    </Select>"
        "  </Query>"
        "</QueryList>"
    )
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è
    action = this_task.Actions.Create(0)  # –¢–∏–ø –¥–µ–π—Å—Ç–≤–∏—è: –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã
    action.Path = r"C:\Users\User\AppData\Local\Programs\Python\Python38-32\python.exe"
    action.Arguments = r"C:\Users\User\Desktop\Python\Projects\Automatic-backup-to-flash-drive\main.py"

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    settings = this_task.Settings
    settings.Enabled = True
    settings.StartWhenAvailable = True
    settings.StopIfGoingOnBatteries = False  # –°–Ω–∏–º–∞–µ–º –≥–∞–ª–æ—á–∫—É "–∑–∞–ø—É—Å–∫–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —ç–ª–µ–∫—Ç—Ä–æ–ø–∏—Ç–∞–Ω–∏–∏"
    settings.DisallowStartIfOnBatteries = False  # –¢–æ–∂–µ —Å–Ω–∏–º–∞–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–ª—è –±–∞—Ç–∞—Ä–µ–∏
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∑–∞–¥–∞—á—É
    try:
        main_folder.RegisterTaskDefinition(
            task_name,
            this_task,
            6,  # CREATE_OR_UPDATE
            None,  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            None,  # –ü–∞—Ä–æ–ª—å
            3,  # LogonType: S4U
        )
        print(f"–ó–∞–¥–∞—á–∞ '{task_name}' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–¥–∞—á–∏: {e}")

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã
# create_USB_backup_task()

list_scheduled_tasks()
import win32com.client

def list_scheduled_tasks():
    """
    üîç **–û–ø–∏—Å–∞–Ω–∏–µ:**
    –í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–¥–∞—á, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∑–∞–¥–∞—á Windows.

    üõ† **–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç:**
    - –ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫—É –∑–∞–¥–∞—á —á–µ—Ä–µ–∑ COM-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.
    - –ü–æ–ª—É—á–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –∑–∞–¥–∞—á.
    - –ü–µ—Ä–µ—á–∏—Å–ª—è–µ—Ç –≤—Å–µ –∑–∞–¥–∞—á–∏ –≤ —ç—Ç–æ–π –ø–∞–ø–∫–µ –∏ –≤—ã–≤–æ–¥–∏—Ç –∏—Ö –∏–º–µ–Ω–∞.

    üìã **–ß—Ç–æ –¥–µ–ª–∞–µ—Ç:**
    - –í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –≤ —Ñ–æ—Ä–º–∞—Ç–µ: `Task Name: <–∏–º—è_–∑–∞–¥–∞—á–∏>`.

    ‚ö† **–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:**
    - –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å –∑–∞–¥–∞—á–∞–º–∏ –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ (–ø–æ–¥–ø–∞–ø–∫–∏ –Ω–µ –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é—Ç—Å—è).
    - –¢—Ä–µ–±—É–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ `pywin32`.

    üìå **–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:**
    >>> list_scheduled_tasks()
    Task Name: MyBackupTask
    Task Name: SystemMaintenance
    Task Name: UpdateChecker

    üìö **–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:**
    - Windows OS —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∑–∞–¥–∞—á.
    - –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –º–æ–¥—É–ª—å `pywin32`.
    """

    # üåü –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫—É –∑–∞–¥–∞—á
    scheduler = win32com.client.Dispatch('Schedule.Service')
    scheduler.Connect()

    # üìÇ –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –∑–∞–¥–∞—á
    root_folder = scheduler.GetFolder('\\')

    # üîÑ –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –∑–∞–¥–∞—á–∏ –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ
    tasks = root_folder.GetTasks(0)
    for task in tasks:
        # üìå –í—ã–≤–æ–¥–∏–º –∏–º—è –∫–∞–∂–¥–æ–π –∑–∞–¥–∞—á–∏
        print(f"Task Name: {task.Name}")



def list_all_scheduled_tasks():
    """
    üîç **–û–ø–∏—Å–∞–Ω–∏–µ:**
    –í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–¥–∞—á, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≤ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ –∑–∞–¥–∞—á Windows, –≤–∫–ª—é—á–∞—è –∑–∞–¥–∞—á–∏ –≤ –ø–æ–¥–ø–∞–ø–∫–∞—Ö.

    üõ† **–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç:**
    - –ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫—É –∑–∞–¥–∞—á —á–µ—Ä–µ–∑ COM-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.
    - –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–±—Ö–æ–¥–∏—Ç –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –∑–∞–¥–∞—á –∏ –≤—Å–µ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –ø–æ–¥–ø–∞–ø–∫–∏.
    - –í—ã–≤–æ–¥–∏—Ç –∏–º–µ–Ω–∞ –≤—Å–µ—Ö –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á, –¥–æ–±–∞–≤–ª—è—è –æ—Ç—Å—Ç—É–ø—ã –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–µ—Ä–∞—Ä—Ö–∏–∏ –ø–∞–ø–æ–∫.

    üìã **–ß—Ç–æ –¥–µ–ª–∞–µ—Ç:**
    - –í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á —Å —É—á–µ—Ç–æ–º –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
        ```
        Task Name: RootTask1
          Task Name: SubFolderTask1
          Task Name: SubFolderTask2
        ```

    ‚ö† **–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:**
    - –¢—Ä–µ–±—É–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ `pywin32`.

    üìå **–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:**
    >>> list_all_scheduled_tasks()
    Task Name: BackupTask
      Task Name: MaintenanceTask
        Task Name: UpdateChecker

    üìö **–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:**
    - Windows OS —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∑–∞–¥–∞—á.
    - –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –º–æ–¥—É–ª—å `pywin32`.
    """

    # üåü –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫—É –∑–∞–¥–∞—á
    scheduler = win32com.client.Dispatch('Schedule.Service')
    scheduler.Connect()

    # üìÇ –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –∑–∞–¥–∞—á
    root_folder = scheduler.GetFolder('\\')

    # üåÄ –†–µ–∫—É—Ä—Å–∏–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ö–æ–¥–∞ –ø–∞–ø–æ–∫ –∏ –∏—Ö –∑–∞–¥–∞—á
    def list_tasks_in_folder(folder, prefix=""):
        # üîÑ –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –∑–∞–¥–∞—á–∏ –≤ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–µ
        tasks = folder.GetTasks(0)
        for task in tasks:
            # üìå –í—ã–≤–æ–¥–∏–º –∏–º—è –∫–∞–∂–¥–æ–π –∑–∞–¥–∞—á–∏ —Å –æ—Ç—Å—Ç—É–ø–æ–º
            print(f"{prefix}Task Name: {task.Name}")

        # üìÇ –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –ø–æ–¥–ø–∞–ø–∫–∏
        subfolders = folder.GetFolders(0)
        for subfolder in subfolders:
            # üîÅ –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–¥–ø–∞–ø–æ–∫
            list_tasks_in_folder(subfolder, prefix=prefix + "  ")

    # üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –æ–±—Ö–æ–¥ —Å –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏
    list_tasks_in_folder(root_folder)


def duplicate_task(old_name, new_name):
    """
    üîÑ **–û–ø–∏—Å–∞–Ω–∏–µ:**
    –î—É–±–ª–∏—Ä—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–¥–∞—á—É –≤ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ –∑–∞–¥–∞—á Windows —Å –Ω–æ–≤—ã–º –∏–º–µ–Ω–µ–º. 
    –ü—Ä–∏ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–∏ —É–±–∏—Ä–∞—é—Ç—Å—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ –∑–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —ç–ª–µ–∫—Ç—Ä–æ–ø–∏—Ç–∞–Ω–∏–∏.

    üìã **–ß—Ç–æ –¥–µ–ª–∞–µ—Ç:**
    - –ò—â–µ—Ç –∑–∞–¥–∞—á—É –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –∏–º–µ–Ω–∏ (`old_name`).
    - –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∏–º–µ–Ω–µ–º (`new_name`).
    - –ö–æ–ø–∏—Ä—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, —Ç—Ä–∏–≥–≥–µ—Ä—ã, –∏ –¥–µ–π—Å—Ç–≤–∏—è –∏–∑ —Å—Ç–∞—Ä–æ–π –∑–∞–¥–∞—á–∏.
    - –û—Ç–∫–ª—é—á–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏ –ø–∏—Ç–∞–Ω–∏—è.

    ‚ö† **–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:**
    - –ï—Å–ª–∏ –∑–∞–¥–∞—á–∞ —Å –∏–º–µ–Ω–µ–º `old_name` –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–µ–∫—Ä–∞—â–∞–µ—Ç—Å—è.
    - –¢—Ä–µ–±—É–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ `pywin32`.

    üìå **–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:**
    >>> duplicate_task("–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ", "–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ (–Ω–æ–≤–æ–µ)")

    üìö **–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:**
    - Windows OS —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∑–∞–¥–∞—á.
    - –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –º–æ–¥—É–ª—å `pywin32`.
    """

    # üåü –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫—É –∑–∞–¥–∞—á
    scheduler = win32com.client.Dispatch('Schedule.Service')
    scheduler.Connect()
    tasks_folder = scheduler.GetFolder('\\')  # üìÇ –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –∑–∞–¥–∞—á

    # üîç –ü–æ–∏—Å–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∑–∞–¥–∞—á–∏ –ø–æ –∏–º–µ–Ω–∏
    old_task = None
    tasks = tasks_folder.GetTasks(0)
    for task in tasks:
        if task.Name == old_name:
            old_task = task
            break

    if not old_task:
        # ‚ùå –ó–∞–≤–µ—Ä—à–∞–µ–º, –µ—Å–ª–∏ –∑–∞–¥–∞—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
        print(f"–ó–∞–¥–∞—á–∞ —Å –∏–º–µ–Ω–µ–º '{old_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return

    # ‚ú® –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—Ç–∞—Ä–æ–π
    new_task = scheduler.NewTask(0)
    new_task.RegistrationInfo.Description = old_task.Definition.RegistrationInfo.Description  # üìù –û–ø–∏—Å–∞–Ω–∏–µ
    new_task.Principal.UserId = old_task.Definition.Principal.UserId  # üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    new_task.Principal.LogonType = old_task.Definition.Principal.LogonType  # üîí –¢–∏–ø –≤—Ö–æ–¥–∞

    # üîÑ –ö–æ–ø–∏—Ä—É–µ–º —Ç—Ä–∏–≥–≥–µ—Ä—ã –∏–∑ —Å—Ç–∞—Ä–æ–π –∑–∞–¥–∞—á–∏
    for trigger in old_task.Definition.Triggers:
        new_trigger = new_task.Triggers.Create(trigger.Type)
        new_trigger.Id = trigger.Id  # üÜî –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç—Ä–∏–≥–≥–µ—Ä–∞
        new_trigger.Enabled = trigger.Enabled  # ‚úÖ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä–∞
        new_trigger.Subscription = trigger.Subscription  # üìú –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, EventID=2003)

    # üîÑ –ö–æ–ø–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏—è –∏–∑ —Å—Ç–∞—Ä–æ–π –∑–∞–¥–∞—á–∏
    for action in old_task.Definition.Actions:
        new_action = new_task.Actions.Create(action.Type)
        new_action.Path = action.Path  # üõ† –ü—É—Ç—å –∫ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–º—É —Ñ–∞–π–ª—É
        new_action.Arguments = action.Arguments  # ‚öô –ê—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
        new_action.WorkingDirectory = action.WorkingDirectory  # üìÇ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è

    # üîß –ö–æ–ø–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–¥–∞—á–∏
    new_task.Settings.Enabled = old_task.Definition.Settings.Enabled  # ‚úÖ –ó–∞–¥–∞—á–∞ –≤–∫–ª—é—á–µ–Ω–∞
    new_task.Settings.StartWhenAvailable = old_task.Definition.Settings.StartWhenAvailable  # üïí –ó–∞–ø—É—Å–∫, –∫–æ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–æ
    new_task.Settings.Hidden = old_task.Definition.Settings.Hidden  # üëÅ‚Äçüó® –ó–∞–¥–∞—á–∞ —Å–∫—Ä—ã—Ç–∞
    new_task.Settings.DisallowStartIfOnBatteries = False  # üîã –†–∞–∑—Ä–µ—à–∏—Ç—å –∑–∞–ø—É—Å–∫ –Ω–∞ –±–∞—Ç–∞—Ä–µ–µ
    new_task.Settings.StopIfGoingOnBatteries = False  # üîã –ù–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –Ω–∞ –±–∞—Ç–∞—Ä–µ–µ

    # üìù –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É
    tasks_folder.RegisterTaskDefinition(
        new_name,  # üìå –ù–æ–≤–æ–µ –∏–º—è –∑–∞–¥–∞—á–∏
        new_task,
        6,  # üìÇ TASK_CREATE_OR_UPDATE (—Å–æ–∑–¥–∞–Ω–∏–µ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)
        None,  # üîë –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —É–∫–∞–∑–∞–Ω
        None,  # üîë –ü–∞—Ä–æ–ª—å –Ω–µ —É–∫–∞–∑–∞–Ω
        old_task.Definition.Principal.LogonType,  # üîí –¢–∏–ø –≤—Ö–æ–¥–∞
        None  # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    )
    # ‚úÖ –°–æ–æ–±—â–∞–µ–º –æ–± —É—Å–ø–µ—à–Ω–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏
    print(f"–ó–∞–¥–∞—á–∞ '{old_name}' —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∞ –∫–∞–∫ '{new_name}'.")



def create_USB_backup_task():
    """
    üîÑ **–û–ø–∏—Å–∞–Ω–∏–µ:**
    –°–æ–∑–¥–∞–µ—Ç –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∑–∞–¥–∞—á—É –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ Windows –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
    –Ω–∞ —Ñ–ª–µ—à–∫—É –ø—Ä–∏ –µ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏.

    üìã **–ß—Ç–æ –¥–µ–ª–∞–µ—Ç:**
    - –£–¥–∞–ª—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–¥–∞—á—É —Å –∏–º–µ–Ω–µ–º `USBBackupTask` (–µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å).
    - –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É:
        - –¢—Ä–∏–≥–≥–µ—Ä: –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ (EventID 2003).
        - –î–µ–π—Å—Ç–≤–∏–µ: –∑–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è.
        - –û—Ç–∫–ª—é—á–∞–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ –∑–∞–ø—É—Å–∫ –ø—Ä–∏ –ø–∏—Ç–∞–Ω–∏–∏ –æ—Ç –±–∞—Ç–∞—Ä–µ–∏.

    üìå **–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:**
    >>> create_USB_backup_task()

    üìö **–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:**
    - Windows OS —Å –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–æ–º –∑–∞–¥–∞—á.
    - –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –º–æ–¥—É–ª—å `pywin32`.
    - –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø—É—Ç—å –∫ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–º—É Python-—Å–∫—Ä–∏–ø—Ç—É.
    """

    # üåü –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫—É –∑–∞–¥–∞—á
    scheduler = win32com.client.Dispatch('Schedule.Service')
    scheduler.Connect()

    # üìÇ –ü–∞–ø–∫–∞ –¥–ª—è –∑–∞–¥–∞—á (–∫–æ—Ä–Ω–µ–≤–∞—è)
    main_folder = scheduler.GetFolder("\\")

    # üóë –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–¥–∞—á—É, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
    task_name = "USBBackupTask"
    try:
        main_folder.DeleteTask(task_name, 0)
        print(f"–ó–∞–¥–∞—á–∞ '{task_name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–µ–Ω–∞.")
    except Exception:
        print(f"–ó–∞–¥–∞—á–∞ '{task_name}' –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞.")

    # ‚ú® –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É
    this_task = scheduler.NewTask(0)

    # üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–¥–∞—á–∏
    this_task.RegistrationInfo.Description = "–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —Ñ–ª–µ—à–∫—É"  # üìù –û–ø–∏—Å–∞–Ω–∏–µ
    this_task.Principal.LogonType = 3  # üîí –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (TASK_LOGON_PASSWORD)

    # üìÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç—Ä–∏–≥–≥–µ—Ä–∞
    trigger = this_task.Triggers.Create(0)  # üìã –¢–∏–ø: –ø—Ä–∏ —Å–æ–±—ã—Ç–∏–∏
    trigger.Id = "EventTrigger1"  # üÜî –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç—Ä–∏–≥–≥–µ—Ä–∞
    trigger.Enabled = True  # ‚úÖ –ê–∫—Ç–∏–≤–µ–Ω
    trigger.Subscription = (
        "<QueryList>"  # üîç –ó–∞–ø—Ä–æ—Å —Å–æ–±—ã—Ç–∏–π
        "  <Query Id='0' Path='Microsoft-Windows-DriverFrameworks-UserMode/Operational'>"
        "    <Select Path='Microsoft-Windows-DriverFrameworks-UserMode/Operational'>"
        "      *[System[(EventID=2003)]]"  # üìú EventID 2003 ‚Äî –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ñ–ª–µ—à–∫–∏
        "    </Select>"
        "  </Query>"
        "</QueryList>"
    )

    # ‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è
    action = this_task.Actions.Create(0)  # üõ† –¢–∏–ø –¥–µ–π—Å—Ç–≤–∏—è: –∑–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã
    action.Path = r"C:\Users\User\AppData\Local\Programs\Python\Python38-32\python.exe"  # üêç –ü—É—Ç—å –∫ Python
    action.Arguments = r"C:\Users\User\Desktop\Python\Projects\Automatic-backup-to-flash-drive\main.py"  # üìú –°–∫—Ä–∏–ø—Ç

    # üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–¥–∞—á–∏
    settings = this_task.Settings
    settings.Enabled = True  # ‚úÖ –í–∫–ª—é—á–µ–Ω–∞
    settings.StartWhenAvailable = True  # üïí –ó–∞–ø—É—Å–∫ –ø—Ä–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
    settings.StopIfGoingOnBatteries = False  # üîã –†–∞–∑—Ä–µ—à–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–∞ –±–∞—Ç–∞—Ä–µ–µ
    settings.DisallowStartIfOnBatteries = False  # üîã –°–Ω—è—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ –±–∞—Ç–∞—Ä–µ–µ

    # üìù –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∑–∞–¥–∞—á—É
    try:
        main_folder.RegisterTaskDefinition(
            task_name,  # üìå –ò–º—è –∑–∞–¥–∞—á–∏
            this_task,  # üîÑ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
            6,  # TASK_CREATE_OR_UPDATE (—Å–æ–∑–¥–∞–Ω–∏–µ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)
            None,  # üîë –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            None,  # üîë –ü–∞—Ä–æ–ª—å
            3,  # TASK_LOGON_S4U (–Ω–µ —Ç—Ä–µ–±—É–µ—Ç –ø–∞—Ä–æ–ª—è)
        )
        print(f"–ó–∞–¥–∞—á–∞ '{task_name}' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
    except Exception as e:
        # ‚ùå –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–¥–∞—á–∏: {e}")


# –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã
# create_USB_backup_task()

list_scheduled_tasks()
